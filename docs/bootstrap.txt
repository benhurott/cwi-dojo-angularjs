*-------------------------------------------------------------------*
*						GUIA DOJO ANGULARJS							*
*-------------------------------------------------------------------*
> Explicar o que é AngularJS
> Explicar que é um framework e não uma lib.
> Configurar uma aplicação básica do zero (baixando os arquivos e tal).
> Criar uma "app", explicando sobre sua modularidade.
> Criar controller "ListagemJogosCtrl" com contagem de jogos.
> Explicar injeção de dependência.
> Criar lista de jogos com ng-repeat.

> Criar função "selecionarJogo(indice)", explicando:
	 > $first, $middle, $last, $even, $odd
	 > $$hashkey, track by x.id
	 > passando o objeto "jogo" como parâmetro
	 
> Aplicar classe CSS quando selecionar jogo com {{}} e ngClass.
	> {{ j.selecionado ? 'jogo-selecionado' : ''; }}
	> ng-class="{ 'jogo-selecionado': j.selecionado }"
	
> Criar frmJogo para criar um jogo novo.
	> ngModel (com erro)
	> ngOptions
		> c as c.nome for c in categorias track by c.id
	> ng-disabled com frmJogo.$invalid
		> ng-valid: the model is valid
		> ng-invalid: the model is invalid
		> ng-valid-[key]: for each valid key added by $setValidity
		> ng-invalid-[key]: for each invalid key added by $setValidity
		> ng-pristine: the control hasn't been interacted with yet
		> ng-dirty: the control has been interacted with
		> ng-touched: the control has been blurred
		> ng-untouched: the control hasn't been blurred
		> ng-pending: any $asyncValidators are unfulfilled
	> mostrar mensagem de erro para campo.
		> frmJogo.nome.$dirty && frmJogo.nome.$error.required
	> mostrar "esc" para voltra nome
		> ng-keyup="resetarNome($event)"
		> 	if($event.keyCode === 27) {
				$scope.frmJogo.nome.$rollbackViewValue();
			}
		> ng-model-options="{ updateOn: 'blur' }"
	> mostrar ng-invalid-key com nome de jogo inválido
		> <div ng-show="frmJogo.nome.$error.jogoruim">
		> 	$scope.verificarNome = function() {
				var valid = $scope.jogoEmEdicao.nome !== 'batman'; 
				$scope.frmJogo.nome.$setValidity('jogomuitoruim', valid);
			}
	> mostrar reset de form
		> $scope.jogoEmEdicao = angular.copy(novoJogoParaEdicao);
		> $scope.frmJogo.$setPristine();
	> Vamos ver validações customizadas de form em "Diretivas"

